// app/static/js/script.js

/**
 * Contains global helper functions or initializations
 * that are needed across multiple pages.
 */

// --- General Initializations ---
document.addEventListener('DOMContentLoaded', function () {
    console.log("Global script.js loaded.");

    // Initialize Bootstrap Tooltips globally (can be overridden by page-specific JS)
    // Ensure tooltips generated by Flask/Jinja have the data-bs-toggle attribute
    initializeBootstrapTooltips();

    // Add other global initializations here if needed
    // e.g., setup for global modals, generic AJAX handlers, etc.

}); // End DOMContentLoaded


// --- Standalone Helper Functions ---

/**
 * Initializes all Bootstrap Tooltips on the page.
 * Finds elements with `data-bs-toggle="tooltip"` and creates a Tooltip instance.
 */
function initializeBootstrapTooltips() {
    try {
        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl, {
                // Optional: Default tooltip configuration
                 trigger: 'hover' // Default trigger
                // delay: { "show": 100, "hide": 100 } // Optional delay
            });
        });
        console.debug("Initialized global Bootstrap Tooltips.");
    } catch (e) {
        console.error("Error initializing Bootstrap Tooltips:", e);
    }
}


/**
 * Plays audio from a given URL using a shared audio player element.
 * Creates the player if it doesn't exist.
 * @param {string} url The URL of the audio file to play.
 */
function playAudio(url) {
    let audioPlayer = document.getElementById('globalAudioPlayer');
    // Create the audio element if it doesn't exist
    if (!audioPlayer) {
        console.debug("Creating global audio player element.");
        audioPlayer = document.createElement('audio');
        audioPlayer.id = 'globalAudioPlayer';
        audioPlayer.style.display = 'none'; // Hide it
        document.body.appendChild(audioPlayer);
    }

    if (audioPlayer && url) {
        console.debug("Playing audio:", url);
        audioPlayer.src = url;
        audioPlayer.play().catch(e => console.error("Audio playback failed:", e));
    } else if (!url) {
        console.warn("playAudio called with no URL.");
    }
}


// Add other global utility functions below as needed...